// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"bytes"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Localization localization
//
// swagger:model Localization
type Localization struct {

	// id
	// Required: true
	ID *int64 `json:"id"`

	// locale
	// Required: true
	Locale *string `json:"locale"`

	// lang name
	// Required: true
	LangName *string `json:"lang_name"`

	// icon
	Icon string `json:"icon,omitempty"`

	// created at
	// Required: true
	CreatedAt *int64 `json:"created_at"`
}

// UnmarshalJSON unmarshals this object while disallowing additional properties from JSON
func (m *Localization) UnmarshalJSON(data []byte) error {
	var props struct {

		// id
		// Required: true
		ID *int64 `json:"id"`

		// locale
		// Required: true
		Locale *string `json:"locale"`

		// lang name
		// Required: true
		LangName *string `json:"lang_name"`

		// icon
		Icon string `json:"icon,omitempty"`

		// created at
		// Required: true
		CreatedAt *int64 `json:"created_at"`
	}

	dec := json.NewDecoder(bytes.NewReader(data))
	dec.DisallowUnknownFields()
	if err := dec.Decode(&props); err != nil {
		return err
	}

	m.ID = props.ID
	m.Locale = props.Locale
	m.LangName = props.LangName
	m.Icon = props.Icon
	m.CreatedAt = props.CreatedAt
	return nil
}

// Validate validates this localization
func (m *Localization) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLocale(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLangName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCreatedAt(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Localization) validateID(formats strfmt.Registry) error {

	if err := validate.Required("id", "body", m.ID); err != nil {
		return err
	}

	return nil
}

func (m *Localization) validateLocale(formats strfmt.Registry) error {

	if err := validate.Required("locale", "body", m.Locale); err != nil {
		return err
	}

	return nil
}

func (m *Localization) validateLangName(formats strfmt.Registry) error {

	if err := validate.Required("lang_name", "body", m.LangName); err != nil {
		return err
	}

	return nil
}

func (m *Localization) validateCreatedAt(formats strfmt.Registry) error {

	if err := validate.Required("created_at", "body", m.CreatedAt); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Localization) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Localization) UnmarshalBinary(b []byte) error {
	var res Localization
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
