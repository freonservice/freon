// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"bytes"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// User user
//
// swagger:model User
type User struct {

	// id
	// Required: true
	ID *int64 `json:"id"`

	// email
	// Required: true
	Email *string `json:"email"`

	// first name
	FirstName string `json:"first_name,omitempty"`

	// second name
	SecondName string `json:"second_name,omitempty"`

	// uuid id
	// Required: true
	UUIDID *string `json:"uuid_id"`

	// role
	// Required: true
	Role *string `json:"role"`

	// status
	// Required: true
	Status *string `json:"status"`

	// created at
	// Required: true
	CreatedAt *int64 `json:"created_at"`
}

// UnmarshalJSON unmarshals this object while disallowing additional properties from JSON
func (m *User) UnmarshalJSON(data []byte) error {
	var props struct {

		// id
		// Required: true
		ID *int64 `json:"id"`

		// email
		// Required: true
		Email *string `json:"email"`

		// first name
		FirstName string `json:"first_name,omitempty"`

		// second name
		SecondName string `json:"second_name,omitempty"`

		// uuid id
		// Required: true
		UUIDID *string `json:"uuid_id"`

		// role
		// Required: true
		Role *string `json:"role"`

		// status
		// Required: true
		Status *string `json:"status"`

		// created at
		// Required: true
		CreatedAt *int64 `json:"created_at"`
	}

	dec := json.NewDecoder(bytes.NewReader(data))
	dec.DisallowUnknownFields()
	if err := dec.Decode(&props); err != nil {
		return err
	}

	m.ID = props.ID
	m.Email = props.Email
	m.FirstName = props.FirstName
	m.SecondName = props.SecondName
	m.UUIDID = props.UUIDID
	m.Role = props.Role
	m.Status = props.Status
	m.CreatedAt = props.CreatedAt
	return nil
}

// Validate validates this user
func (m *User) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEmail(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUUIDID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRole(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCreatedAt(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *User) validateID(formats strfmt.Registry) error {

	if err := validate.Required("id", "body", m.ID); err != nil {
		return err
	}

	return nil
}

func (m *User) validateEmail(formats strfmt.Registry) error {

	if err := validate.Required("email", "body", m.Email); err != nil {
		return err
	}

	return nil
}

func (m *User) validateUUIDID(formats strfmt.Registry) error {

	if err := validate.Required("uuid_id", "body", m.UUIDID); err != nil {
		return err
	}

	return nil
}

func (m *User) validateRole(formats strfmt.Registry) error {

	if err := validate.Required("role", "body", m.Role); err != nil {
		return err
	}

	return nil
}

func (m *User) validateStatus(formats strfmt.Registry) error {

	if err := validate.Required("status", "body", m.Status); err != nil {
		return err
	}

	return nil
}

func (m *User) validateCreatedAt(formats strfmt.Registry) error {

	if err := validate.Required("created_at", "body", m.CreatedAt); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *User) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *User) UnmarshalBinary(b []byte) error {
	var res User
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
