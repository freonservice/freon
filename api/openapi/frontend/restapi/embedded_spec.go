// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Frontend Server for rest api",
    "title": "Freon Frontend",
    "version": "0.0.1"
  },
  "basePath": "/api/internal",
  "paths": {
    "/categories": {
      "get": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "get full list of available categories",
        "operationId": "listCategories",
        "responses": {
          "200": {
            "description": "List with all categories",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Category"
              }
            }
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/category": {
      "post": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "create new category",
        "operationId": "createCategory",
        "parameters": [
          {
            "name": "args",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 255,
                  "minLength": 1
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/NoContent"
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/category/{id}": {
      "put": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "update category",
        "operationId": "updateCategory",
        "parameters": [
          {
            "minimum": 1,
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "args",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 255,
                  "minLength": 1
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/NoContent"
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      },
      "delete": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "delete category",
        "operationId": "deleteCategory",
        "parameters": [
          {
            "minimum": 1,
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/NoContent"
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/health-check": {
      "get": {
        "description": "Returns 200 if service works okay.",
        "operationId": "healthCheck",
        "responses": {
          "200": {
            "description": "Freon internal health-check",
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/identifier": {
      "post": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "create new identifier",
        "operationId": "createIdentifier",
        "parameters": [
          {
            "name": "args",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "category_id": {
                  "type": "integer"
                },
                "description": {
                  "type": "string"
                },
                "example_text": {
                  "type": "string"
                },
                "name": {
                  "type": "string",
                  "maxLength": 255,
                  "minLength": 1
                },
                "named_list": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "parent_id": {
                  "type": "integer"
                },
                "platforms": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/NoContent"
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/identifier/{id}": {
      "put": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "update identifier fields",
        "operationId": "updateIdentifier",
        "parameters": [
          {
            "minimum": 1,
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "args",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "category_id": {
                  "type": "integer"
                },
                "description": {
                  "type": "string"
                },
                "example_text": {
                  "type": "string"
                },
                "name": {
                  "type": "string",
                  "maxLength": 255,
                  "minLength": 1
                },
                "named_list": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "parent_id": {
                  "type": "integer"
                },
                "platforms": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/NoContent"
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      },
      "delete": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "delete identifier by id only if he dosent use in localizations otherwise error",
        "operationId": "deleteIdentifier",
        "parameters": [
          {
            "minimum": 1,
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/NoContent"
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/identifiers": {
      "get": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "get full list of available identifiers",
        "operationId": "listIdentifiers",
        "parameters": [
          {
            "minimum": 1,
            "type": "integer",
            "name": "category_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List with all identifiers",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Identifier"
              }
            }
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/localization": {
      "post": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "create new localization type",
        "operationId": "createLocalization",
        "parameters": [
          {
            "name": "args",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "locale",
                "lang_name"
              ],
              "properties": {
                "icon": {
                  "type": "string"
                },
                "lang_name": {
                  "type": "string",
                  "maxLength": 255,
                  "minLength": 1
                },
                "locale": {
                  "type": "string",
                  "maxLength": 10,
                  "minLength": 2
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/NoContent"
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/localization/{id}": {
      "delete": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "delete localization by id",
        "operationId": "deleteLocalization",
        "parameters": [
          {
            "minimum": 1,
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/NoContent"
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/localizations": {
      "get": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "get list localization sorted by user permission",
        "operationId": "listLocalization",
        "responses": {
          "200": {
            "description": "List of localizations available for current user",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Localization"
              }
            }
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "login user by email and password",
        "operationId": "login",
        "parameters": [
          {
            "name": "args",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "email",
                "password"
              ],
              "properties": {
                "email": {
                  "type": "string",
                  "maxLength": 255,
                  "minLength": 1,
                  "pattern": "^[\\x21-\\x7F]{1,64}@[\\x21-\\x3F\\x41-\\x7F]+$"
                },
                "password": {
                  "type": "string",
                  "format": "password",
                  "maxLength": 100,
                  "minLength": 6
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "token",
                "user"
              ],
              "properties": {
                "token": {
                  "type": "string",
                  "format": "string"
                },
                "user": {
                  "type": "object",
                  "required": [
                    "first_name",
                    "second_name",
                    "email",
                    "uuid_id",
                    "role"
                  ],
                  "properties": {
                    "email": {
                      "type": "string",
                      "format": "string"
                    },
                    "first_name": {
                      "type": "string",
                      "format": "string"
                    },
                    "role": {
                      "type": "integer"
                    },
                    "second_name": {
                      "type": "string",
                      "format": "string"
                    },
                    "uuid_id": {
                      "type": "string",
                      "format": "string"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/logout": {
      "post": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "logout user, remove jwt session",
        "operationId": "logoutUser",
        "responses": {
          "204": {
            "$ref": "#/responses/NoContent"
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/statistic": {
      "get": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "get service statistic",
        "operationId": "statistic",
        "responses": {
          "200": {
            "description": "get service statistic",
            "schema": {
              "type": "object",
              "required": [
                "count_categories",
                "count_users",
                "count_identifiers",
                "count_localizations",
                "stat_completed_translations"
              ],
              "properties": {
                "count_categories": {
                  "type": "integer"
                },
                "count_identifiers": {
                  "type": "integer"
                },
                "count_localizations": {
                  "type": "integer"
                },
                "count_users": {
                  "type": "integer"
                },
                "stat_completed_translations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "lang_name",
                      "percentage"
                    ],
                    "properties": {
                      "lang_name": {
                        "type": "string"
                      },
                      "percentage": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/translation": {
      "post": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "create new translation",
        "operationId": "createTranslation",
        "parameters": [
          {
            "name": "args",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "localization_id",
                "identifier_id",
                "singular"
              ],
              "properties": {
                "identifier_id": {
                  "type": "integer"
                },
                "localization_id": {
                  "type": "integer"
                },
                "plural": {
                  "type": "string"
                },
                "singular": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/NoContent"
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/translation-files": {
      "get": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "get full list of available translation files",
        "operationId": "listTranslationFiles",
        "parameters": [
          {
            "minimum": 1,
            "type": "integer",
            "name": "localization_id",
            "in": "query"
          },
          {
            "type": "string",
            "name": "platform",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List with all translation files",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TranslationFile"
              }
            }
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      },
      "post": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "create translation files for one localization (language) and different platforms (ios,android,web)",
        "operationId": "createTranslationFiles",
        "parameters": [
          {
            "name": "args",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "localization_id",
                "platforms"
              ],
              "properties": {
                "localization_id": {
                  "type": "integer",
                  "format": "int64"
                },
                "platforms": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "storage_type": {
                  "type": "string",
                  "default": "local",
                  "enum": [
                    "local"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/NoContent"
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/translation-files/{id}": {
      "delete": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "delete translation file by id",
        "operationId": "deleteTranslationFile",
        "parameters": [
          {
            "minimum": 1,
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/NoContent"
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/translation/hide/{id}/{hide}": {
      "put": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "hide translation",
        "operationId": "hideTranslation",
        "parameters": [
          {
            "minimum": 1,
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "default": true,
            "name": "hide",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/NoContent"
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/translation/{id}": {
      "put": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "update translation",
        "operationId": "updateTranslation",
        "parameters": [
          {
            "minimum": 1,
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "args",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "singular"
              ],
              "properties": {
                "plural": {
                  "type": "string"
                },
                "singular": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/NoContent"
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      },
      "delete": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "delete translation",
        "operationId": "deleteTranslation",
        "parameters": [
          {
            "minimum": 1,
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/NoContent"
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/translations": {
      "get": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "get full list of available translations",
        "operationId": "listTranslations",
        "parameters": [
          {
            "minimum": 1,
            "type": "integer",
            "name": "localization_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List with all translations",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Translation"
              }
            }
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/user/change-password": {
      "put": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "user change password",
        "operationId": "userChangePassword",
        "parameters": [
          {
            "name": "args",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "old_password",
                "new_password",
                "repeat_password"
              ],
              "properties": {
                "new_password": {
                  "type": "string",
                  "maxLength": 100,
                  "minLength": 8
                },
                "old_password": {
                  "type": "string",
                  "maxLength": 100,
                  "minLength": 8
                },
                "repeat_password": {
                  "type": "string",
                  "maxLength": 100,
                  "minLength": 8
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/NoContent"
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/user/change-profile": {
      "put": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "user change profile",
        "operationId": "userChangeProfile",
        "parameters": [
          {
            "name": "args",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "email",
                "first_name",
                "second_name"
              ],
              "properties": {
                "email": {
                  "type": "string",
                  "maxLength": 100,
                  "minLength": 1
                },
                "first_name": {
                  "type": "string",
                  "maxLength": 100,
                  "minLength": 1
                },
                "role": {
                  "type": "string",
                  "default": "translator",
                  "enum": [
                    "admin",
                    "moderator",
                    "translator",
                    "user"
                  ]
                },
                "second_name": {
                  "type": "string",
                  "maxLength": 100,
                  "minLength": 1
                },
                "status": {
                  "type": "string",
                  "default": "active",
                  "enum": [
                    "active",
                    "not active",
                    "banned"
                  ]
                },
                "user_id": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/NoContent"
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/user/change-status": {
      "put": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "user change status",
        "operationId": "userChangeStatus",
        "parameters": [
          {
            "name": "args",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "user_id",
                "status"
              ],
              "properties": {
                "status": {
                  "type": "integer"
                },
                "user_id": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/NoContent"
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/user/me": {
      "get": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "get own user information",
        "operationId": "userMe",
        "responses": {
          "200": {
            "$ref": "#/responses/User"
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/user/register": {
      "post": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "registration new user",
        "operationId": "regUser",
        "parameters": [
          {
            "name": "args",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "email",
                "first_name",
                "second_name",
                "password",
                "repeat_password",
                "role"
              ],
              "properties": {
                "email": {
                  "type": "string",
                  "maxLength": 255,
                  "minLength": 1,
                  "pattern": "^[\\x21-\\x7F]{1,64}@[\\x21-\\x3F\\x41-\\x7F]+$"
                },
                "first_name": {
                  "type": "string",
                  "maxLength": 100,
                  "minLength": 1
                },
                "password": {
                  "type": "string",
                  "format": "password",
                  "maxLength": 100,
                  "minLength": 8
                },
                "repeat_password": {
                  "type": "string",
                  "format": "password",
                  "maxLength": 100,
                  "minLength": 8
                },
                "role": {
                  "type": "string"
                },
                "second_name": {
                  "type": "string",
                  "maxLength": 100,
                  "minLength": 1
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/NoContent"
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/users": {
      "get": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "get list user",
        "operationId": "listUser",
        "responses": {
          "200": {
            "description": "List of all registred users",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    }
  },
  "definitions": {
    "Category": {
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "x-order": 0
        },
        "name": {
          "type": "string",
          "maxLength": 255,
          "minLength": 1,
          "x-order": 1
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "description": "HTTP status",
          "type": "integer",
          "format": "int32",
          "x-order": 0
        },
        "message": {
          "type": "string",
          "x-order": 1
        }
      }
    },
    "Identifier": {
      "type": "object",
      "required": [
        "id",
        "name",
        "platforms"
      ],
      "properties": {
        "category": {
          "x-order": 4,
          "$ref": "#/definitions/Category"
        },
        "description": {
          "type": "string",
          "x-order": 2
        },
        "example_text": {
          "type": "string",
          "x-order": 3
        },
        "id": {
          "type": "integer",
          "x-order": 0
        },
        "name": {
          "type": "string",
          "maxLength": 255,
          "minLength": 1,
          "x-order": 1
        },
        "named_list": {
          "type": "array",
          "default": null,
          "items": {
            "type": "string"
          },
          "x-order": 6
        },
        "platforms": {
          "type": "array",
          "default": null,
          "items": {
            "type": "string"
          },
          "x-order": 5
        }
      }
    },
    "Localization": {
      "type": "object",
      "required": [
        "id",
        "locale",
        "lang_name",
        "created_at"
      ],
      "properties": {
        "created_at": {
          "type": "integer",
          "x-order": 4
        },
        "icon": {
          "type": "string",
          "x-order": 3
        },
        "id": {
          "type": "integer",
          "x-order": 0
        },
        "lang_name": {
          "type": "string",
          "x-order": 2
        },
        "locale": {
          "type": "string",
          "x-order": 1
        }
      }
    },
    "Translation": {
      "type": "object",
      "required": [
        "id",
        "localization",
        "identifier",
        "singular",
        "created_at"
      ],
      "properties": {
        "created_at": {
          "type": "integer",
          "x-order": 6
        },
        "id": {
          "type": "integer",
          "x-order": 0
        },
        "identifier": {
          "x-order": 2,
          "$ref": "#/definitions/Identifier"
        },
        "localization": {
          "x-order": 1,
          "$ref": "#/definitions/Localization"
        },
        "plural": {
          "type": "string",
          "x-order": 4
        },
        "singular": {
          "type": "string",
          "x-order": 3
        },
        "status": {
          "type": "string",
          "x-order": 5
        }
      }
    },
    "TranslationFile": {
      "type": "object",
      "required": [
        "id",
        "name",
        "path",
        "platform",
        "storage_type",
        "created_at"
      ],
      "properties": {
        "created_at": {
          "type": "integer",
          "x-order": 6
        },
        "id": {
          "type": "integer",
          "x-order": 0
        },
        "name": {
          "type": "string",
          "x-order": 1
        },
        "path": {
          "type": "string",
          "x-order": 2
        },
        "platform": {
          "type": "string",
          "x-order": 3
        },
        "status": {
          "type": "string",
          "x-order": 4
        },
        "storage_type": {
          "type": "string",
          "default": "local",
          "enum": [
            "local"
          ],
          "x-order": 5
        }
      }
    },
    "User": {
      "type": "object",
      "required": [
        "id",
        "email",
        "uuid_id",
        "role",
        "status",
        "created_at"
      ],
      "properties": {
        "created_at": {
          "type": "integer",
          "x-order": 7
        },
        "email": {
          "type": "string",
          "x-order": 1
        },
        "first_name": {
          "type": "string",
          "x-order": 2
        },
        "id": {
          "type": "integer",
          "x-order": 0
        },
        "role": {
          "type": "string",
          "x-order": 5
        },
        "second_name": {
          "type": "string",
          "x-order": 3
        },
        "status": {
          "type": "string",
          "x-order": 6
        },
        "uuid_id": {
          "type": "string",
          "x-order": 4
        }
      }
    }
  },
  "responses": {
    "Error": {
      "description": "General errors using same model as used by go-swagger for validation errors.",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "NoContent": {
      "description": "No content in answer"
    },
    "User": {
      "description": "user model",
      "schema": {
        "$ref": "#/definitions/User"
      }
    }
  },
  "securityDefinitions": {
    "JWTBearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Frontend Server for rest api",
    "title": "Freon Frontend",
    "version": "0.0.1"
  },
  "basePath": "/api/internal",
  "paths": {
    "/categories": {
      "get": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "get full list of available categories",
        "operationId": "listCategories",
        "responses": {
          "200": {
            "description": "List with all categories",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Category"
              }
            }
          },
          "default": {
            "description": "General errors using same model as used by go-swagger for validation errors.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/category": {
      "post": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "create new category",
        "operationId": "createCategory",
        "parameters": [
          {
            "name": "args",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 255,
                  "minLength": 1
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content in answer"
          },
          "default": {
            "description": "General errors using same model as used by go-swagger for validation errors.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/category/{id}": {
      "put": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "update category",
        "operationId": "updateCategory",
        "parameters": [
          {
            "minimum": 1,
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "args",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 255,
                  "minLength": 1
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content in answer"
          },
          "default": {
            "description": "General errors using same model as used by go-swagger for validation errors.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "delete category",
        "operationId": "deleteCategory",
        "parameters": [
          {
            "minimum": 1,
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No content in answer"
          },
          "default": {
            "description": "General errors using same model as used by go-swagger for validation errors.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/health-check": {
      "get": {
        "description": "Returns 200 if service works okay.",
        "operationId": "healthCheck",
        "responses": {
          "200": {
            "description": "Freon internal health-check",
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          },
          "default": {
            "description": "General errors using same model as used by go-swagger for validation errors.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/identifier": {
      "post": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "create new identifier",
        "operationId": "createIdentifier",
        "parameters": [
          {
            "name": "args",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "category_id": {
                  "type": "integer"
                },
                "description": {
                  "type": "string"
                },
                "example_text": {
                  "type": "string"
                },
                "name": {
                  "type": "string",
                  "maxLength": 255,
                  "minLength": 1
                },
                "named_list": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "parent_id": {
                  "type": "integer"
                },
                "platforms": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content in answer"
          },
          "default": {
            "description": "General errors using same model as used by go-swagger for validation errors.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/identifier/{id}": {
      "put": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "update identifier fields",
        "operationId": "updateIdentifier",
        "parameters": [
          {
            "minimum": 1,
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "args",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "category_id": {
                  "type": "integer"
                },
                "description": {
                  "type": "string"
                },
                "example_text": {
                  "type": "string"
                },
                "name": {
                  "type": "string",
                  "maxLength": 255,
                  "minLength": 1
                },
                "named_list": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "parent_id": {
                  "type": "integer"
                },
                "platforms": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content in answer"
          },
          "default": {
            "description": "General errors using same model as used by go-swagger for validation errors.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "delete identifier by id only if he dosent use in localizations otherwise error",
        "operationId": "deleteIdentifier",
        "parameters": [
          {
            "minimum": 1,
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No content in answer"
          },
          "default": {
            "description": "General errors using same model as used by go-swagger for validation errors.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/identifiers": {
      "get": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "get full list of available identifiers",
        "operationId": "listIdentifiers",
        "parameters": [
          {
            "minimum": 1,
            "type": "integer",
            "name": "category_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List with all identifiers",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Identifier"
              }
            }
          },
          "default": {
            "description": "General errors using same model as used by go-swagger for validation errors.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/localization": {
      "post": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "create new localization type",
        "operationId": "createLocalization",
        "parameters": [
          {
            "name": "args",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "locale",
                "lang_name"
              ],
              "properties": {
                "icon": {
                  "type": "string"
                },
                "lang_name": {
                  "type": "string",
                  "maxLength": 255,
                  "minLength": 1
                },
                "locale": {
                  "type": "string",
                  "maxLength": 10,
                  "minLength": 2
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content in answer"
          },
          "default": {
            "description": "General errors using same model as used by go-swagger for validation errors.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/localization/{id}": {
      "delete": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "delete localization by id",
        "operationId": "deleteLocalization",
        "parameters": [
          {
            "minimum": 1,
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No content in answer"
          },
          "default": {
            "description": "General errors using same model as used by go-swagger for validation errors.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/localizations": {
      "get": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "get list localization sorted by user permission",
        "operationId": "listLocalization",
        "responses": {
          "200": {
            "description": "List of localizations available for current user",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Localization"
              }
            }
          },
          "default": {
            "description": "General errors using same model as used by go-swagger for validation errors.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "login user by email and password",
        "operationId": "login",
        "parameters": [
          {
            "name": "args",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "email",
                "password"
              ],
              "properties": {
                "email": {
                  "type": "string",
                  "maxLength": 255,
                  "minLength": 1,
                  "pattern": "^[\\x21-\\x7F]{1,64}@[\\x21-\\x3F\\x41-\\x7F]+$"
                },
                "password": {
                  "type": "string",
                  "format": "password",
                  "maxLength": 100,
                  "minLength": 6
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "token",
                "user"
              ],
              "properties": {
                "token": {
                  "type": "string",
                  "format": "string"
                },
                "user": {
                  "type": "object",
                  "required": [
                    "first_name",
                    "second_name",
                    "email",
                    "uuid_id",
                    "role"
                  ],
                  "properties": {
                    "email": {
                      "type": "string",
                      "format": "string"
                    },
                    "first_name": {
                      "type": "string",
                      "format": "string"
                    },
                    "role": {
                      "type": "integer"
                    },
                    "second_name": {
                      "type": "string",
                      "format": "string"
                    },
                    "uuid_id": {
                      "type": "string",
                      "format": "string"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "General errors using same model as used by go-swagger for validation errors.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/logout": {
      "post": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "logout user, remove jwt session",
        "operationId": "logoutUser",
        "responses": {
          "204": {
            "description": "No content in answer"
          },
          "default": {
            "description": "General errors using same model as used by go-swagger for validation errors.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/statistic": {
      "get": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "get service statistic",
        "operationId": "statistic",
        "responses": {
          "200": {
            "description": "get service statistic",
            "schema": {
              "type": "object",
              "required": [
                "count_categories",
                "count_users",
                "count_identifiers",
                "count_localizations",
                "stat_completed_translations"
              ],
              "properties": {
                "count_categories": {
                  "type": "integer",
                  "minimum": 0
                },
                "count_identifiers": {
                  "type": "integer",
                  "minimum": 0
                },
                "count_localizations": {
                  "type": "integer",
                  "minimum": 0
                },
                "count_users": {
                  "type": "integer",
                  "minimum": 0
                },
                "stat_completed_translations": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/StatCompletedTranslationsItems0"
                  }
                }
              }
            }
          },
          "default": {
            "description": "General errors using same model as used by go-swagger for validation errors.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/translation": {
      "post": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "create new translation",
        "operationId": "createTranslation",
        "parameters": [
          {
            "name": "args",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "localization_id",
                "identifier_id",
                "singular"
              ],
              "properties": {
                "identifier_id": {
                  "type": "integer"
                },
                "localization_id": {
                  "type": "integer"
                },
                "plural": {
                  "type": "string"
                },
                "singular": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content in answer"
          },
          "default": {
            "description": "General errors using same model as used by go-swagger for validation errors.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/translation-files": {
      "get": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "get full list of available translation files",
        "operationId": "listTranslationFiles",
        "parameters": [
          {
            "minimum": 1,
            "type": "integer",
            "name": "localization_id",
            "in": "query"
          },
          {
            "type": "string",
            "name": "platform",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List with all translation files",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TranslationFile"
              }
            }
          },
          "default": {
            "description": "General errors using same model as used by go-swagger for validation errors.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "create translation files for one localization (language) and different platforms (ios,android,web)",
        "operationId": "createTranslationFiles",
        "parameters": [
          {
            "name": "args",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "localization_id",
                "platforms"
              ],
              "properties": {
                "localization_id": {
                  "type": "integer",
                  "format": "int64"
                },
                "platforms": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "storage_type": {
                  "type": "string",
                  "default": "local",
                  "enum": [
                    "local"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content in answer"
          },
          "default": {
            "description": "General errors using same model as used by go-swagger for validation errors.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/translation-files/{id}": {
      "delete": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "delete translation file by id",
        "operationId": "deleteTranslationFile",
        "parameters": [
          {
            "minimum": 1,
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No content in answer"
          },
          "default": {
            "description": "General errors using same model as used by go-swagger for validation errors.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/translation/hide/{id}/{hide}": {
      "put": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "hide translation",
        "operationId": "hideTranslation",
        "parameters": [
          {
            "minimum": 1,
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "default": true,
            "name": "hide",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No content in answer"
          },
          "default": {
            "description": "General errors using same model as used by go-swagger for validation errors.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/translation/{id}": {
      "put": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "update translation",
        "operationId": "updateTranslation",
        "parameters": [
          {
            "minimum": 1,
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "args",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "singular"
              ],
              "properties": {
                "plural": {
                  "type": "string"
                },
                "singular": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content in answer"
          },
          "default": {
            "description": "General errors using same model as used by go-swagger for validation errors.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "delete translation",
        "operationId": "deleteTranslation",
        "parameters": [
          {
            "minimum": 1,
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No content in answer"
          },
          "default": {
            "description": "General errors using same model as used by go-swagger for validation errors.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/translations": {
      "get": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "get full list of available translations",
        "operationId": "listTranslations",
        "parameters": [
          {
            "minimum": 1,
            "type": "integer",
            "name": "localization_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List with all translations",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Translation"
              }
            }
          },
          "default": {
            "description": "General errors using same model as used by go-swagger for validation errors.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/user/change-password": {
      "put": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "user change password",
        "operationId": "userChangePassword",
        "parameters": [
          {
            "name": "args",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "old_password",
                "new_password",
                "repeat_password"
              ],
              "properties": {
                "new_password": {
                  "type": "string",
                  "maxLength": 100,
                  "minLength": 8
                },
                "old_password": {
                  "type": "string",
                  "maxLength": 100,
                  "minLength": 8
                },
                "repeat_password": {
                  "type": "string",
                  "maxLength": 100,
                  "minLength": 8
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content in answer"
          },
          "default": {
            "description": "General errors using same model as used by go-swagger for validation errors.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/user/change-profile": {
      "put": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "user change profile",
        "operationId": "userChangeProfile",
        "parameters": [
          {
            "name": "args",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "email",
                "first_name",
                "second_name"
              ],
              "properties": {
                "email": {
                  "type": "string",
                  "maxLength": 100,
                  "minLength": 1
                },
                "first_name": {
                  "type": "string",
                  "maxLength": 100,
                  "minLength": 1
                },
                "role": {
                  "type": "string",
                  "default": "translator",
                  "enum": [
                    "admin",
                    "moderator",
                    "translator",
                    "user"
                  ]
                },
                "second_name": {
                  "type": "string",
                  "maxLength": 100,
                  "minLength": 1
                },
                "status": {
                  "type": "string",
                  "default": "active",
                  "enum": [
                    "active",
                    "not active",
                    "banned"
                  ]
                },
                "user_id": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content in answer"
          },
          "default": {
            "description": "General errors using same model as used by go-swagger for validation errors.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/user/change-status": {
      "put": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "user change status",
        "operationId": "userChangeStatus",
        "parameters": [
          {
            "name": "args",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "user_id",
                "status"
              ],
              "properties": {
                "status": {
                  "type": "integer"
                },
                "user_id": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content in answer"
          },
          "default": {
            "description": "General errors using same model as used by go-swagger for validation errors.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/user/me": {
      "get": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "get own user information",
        "operationId": "userMe",
        "responses": {
          "200": {
            "description": "user model",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "default": {
            "description": "General errors using same model as used by go-swagger for validation errors.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/user/register": {
      "post": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "registration new user",
        "operationId": "regUser",
        "parameters": [
          {
            "name": "args",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "email",
                "first_name",
                "second_name",
                "password",
                "repeat_password",
                "role"
              ],
              "properties": {
                "email": {
                  "type": "string",
                  "maxLength": 255,
                  "minLength": 1,
                  "pattern": "^[\\x21-\\x7F]{1,64}@[\\x21-\\x3F\\x41-\\x7F]+$"
                },
                "first_name": {
                  "type": "string",
                  "maxLength": 100,
                  "minLength": 1
                },
                "password": {
                  "type": "string",
                  "format": "password",
                  "maxLength": 100,
                  "minLength": 8
                },
                "repeat_password": {
                  "type": "string",
                  "format": "password",
                  "maxLength": 100,
                  "minLength": 8
                },
                "role": {
                  "type": "string"
                },
                "second_name": {
                  "type": "string",
                  "maxLength": 100,
                  "minLength": 1
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content in answer"
          },
          "default": {
            "description": "General errors using same model as used by go-swagger for validation errors.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "security": [
          {
            "JWTBearer": []
          }
        ],
        "summary": "get list user",
        "operationId": "listUser",
        "responses": {
          "200": {
            "description": "List of all registred users",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "default": {
            "description": "General errors using same model as used by go-swagger for validation errors.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Category": {
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "x-order": 0
        },
        "name": {
          "type": "string",
          "maxLength": 255,
          "minLength": 1,
          "x-order": 1
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "description": "HTTP status",
          "type": "integer",
          "format": "int32",
          "x-order": 0
        },
        "message": {
          "type": "string",
          "x-order": 1
        }
      }
    },
    "Identifier": {
      "type": "object",
      "required": [
        "id",
        "name",
        "platforms"
      ],
      "properties": {
        "category": {
          "x-order": 4,
          "$ref": "#/definitions/Category"
        },
        "description": {
          "type": "string",
          "x-order": 2
        },
        "example_text": {
          "type": "string",
          "x-order": 3
        },
        "id": {
          "type": "integer",
          "x-order": 0
        },
        "name": {
          "type": "string",
          "maxLength": 255,
          "minLength": 1,
          "x-order": 1
        },
        "named_list": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "x-order": 6
        },
        "platforms": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "x-order": 5
        }
      }
    },
    "Localization": {
      "type": "object",
      "required": [
        "id",
        "locale",
        "lang_name",
        "created_at"
      ],
      "properties": {
        "created_at": {
          "type": "integer",
          "x-order": 4
        },
        "icon": {
          "type": "string",
          "x-order": 3
        },
        "id": {
          "type": "integer",
          "x-order": 0
        },
        "lang_name": {
          "type": "string",
          "x-order": 2
        },
        "locale": {
          "type": "string",
          "x-order": 1
        }
      }
    },
    "LoginOKBodyUser": {
      "type": "object",
      "required": [
        "first_name",
        "second_name",
        "email",
        "uuid_id",
        "role"
      ],
      "properties": {
        "email": {
          "type": "string",
          "format": "string"
        },
        "first_name": {
          "type": "string",
          "format": "string"
        },
        "role": {
          "type": "integer"
        },
        "second_name": {
          "type": "string",
          "format": "string"
        },
        "uuid_id": {
          "type": "string",
          "format": "string"
        }
      }
    },
    "StatCompletedTranslationsItems0": {
      "type": "object",
      "required": [
        "lang_name",
        "percentage"
      ],
      "properties": {
        "lang_name": {
          "type": "string"
        },
        "percentage": {
          "type": "number"
        }
      }
    },
    "Translation": {
      "type": "object",
      "required": [
        "id",
        "localization",
        "identifier",
        "singular",
        "created_at"
      ],
      "properties": {
        "created_at": {
          "type": "integer",
          "x-order": 6
        },
        "id": {
          "type": "integer",
          "x-order": 0
        },
        "identifier": {
          "x-order": 2,
          "$ref": "#/definitions/Identifier"
        },
        "localization": {
          "x-order": 1,
          "$ref": "#/definitions/Localization"
        },
        "plural": {
          "type": "string",
          "x-order": 4
        },
        "singular": {
          "type": "string",
          "x-order": 3
        },
        "status": {
          "type": "string",
          "x-order": 5
        }
      }
    },
    "TranslationFile": {
      "type": "object",
      "required": [
        "id",
        "name",
        "path",
        "platform",
        "storage_type",
        "created_at"
      ],
      "properties": {
        "created_at": {
          "type": "integer",
          "x-order": 6
        },
        "id": {
          "type": "integer",
          "x-order": 0
        },
        "name": {
          "type": "string",
          "x-order": 1
        },
        "path": {
          "type": "string",
          "x-order": 2
        },
        "platform": {
          "type": "string",
          "x-order": 3
        },
        "status": {
          "type": "string",
          "x-order": 4
        },
        "storage_type": {
          "type": "string",
          "default": "local",
          "enum": [
            "local"
          ],
          "x-order": 5
        }
      }
    },
    "User": {
      "type": "object",
      "required": [
        "id",
        "email",
        "uuid_id",
        "role",
        "status",
        "created_at"
      ],
      "properties": {
        "created_at": {
          "type": "integer",
          "x-order": 7
        },
        "email": {
          "type": "string",
          "x-order": 1
        },
        "first_name": {
          "type": "string",
          "x-order": 2
        },
        "id": {
          "type": "integer",
          "x-order": 0
        },
        "role": {
          "type": "string",
          "x-order": 5
        },
        "second_name": {
          "type": "string",
          "x-order": 3
        },
        "status": {
          "type": "string",
          "x-order": 6
        },
        "uuid_id": {
          "type": "string",
          "x-order": 4
        }
      }
    }
  },
  "responses": {
    "Error": {
      "description": "General errors using same model as used by go-swagger for validation errors.",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "NoContent": {
      "description": "No content in answer"
    },
    "User": {
      "description": "user model",
      "schema": {
        "$ref": "#/definitions/User"
      }
    }
  },
  "securityDefinitions": {
    "JWTBearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}`))
}
