// Code generated by go-swagger; DO NOT EDIT.

package op

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"bytes"
	"context"
	"encoding/json"
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/freonservice/freon/internal/app"
)

// AutoTranslationHandlerFunc turns a function with the right signature into a auto translation handler
type AutoTranslationHandlerFunc func(AutoTranslationParams, *app.UserSession) AutoTranslationResponder

// Handle executing the request and returning a response
func (fn AutoTranslationHandlerFunc) Handle(params AutoTranslationParams, principal *app.UserSession) AutoTranslationResponder {
	return fn(params, principal)
}

// AutoTranslationHandler interface for that can handle valid auto translation params
type AutoTranslationHandler interface {
	Handle(AutoTranslationParams, *app.UserSession) AutoTranslationResponder
}

// NewAutoTranslation creates a new http.Handler for the auto translation operation
func NewAutoTranslation(ctx *middleware.Context, handler AutoTranslationHandler) *AutoTranslation {
	return &AutoTranslation{Context: ctx, Handler: handler}
}

/* AutoTranslation swagger:route POST /auto-translation autoTranslation

create auto translation (with libra or other service)

*/
type AutoTranslation struct {
	Context *middleware.Context
	Handler AutoTranslationHandler
}

func (o *AutoTranslation) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewAutoTranslationParams()
	uprinc, aCtx, err := o.Context.Authorize(r, route)
	if err != nil {
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}
	if aCtx != nil {
		*r = *aCtx
	}
	var principal *app.UserSession
	if uprinc != nil {
		principal = uprinc.(*app.UserSession) // this is really a app.UserSession, I promise
	}

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params, principal) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// AutoTranslationBody auto translation body
//
// swagger:model AutoTranslationBody
type AutoTranslationBody struct {

	// source
	// Required: true
	// Min Length: 2
	Source *string `json:"source"`

	// target
	// Required: true
	// Min Length: 2
	Target *string `json:"target"`

	// text
	// Required: true
	// Min Length: 1
	Text *string `json:"text"`
}

// UnmarshalJSON unmarshals this object while disallowing additional properties from JSON
func (o *AutoTranslationBody) UnmarshalJSON(data []byte) error {
	var props struct {

		// source
		// Required: true
		// Min Length: 2
		Source *string `json:"source"`

		// target
		// Required: true
		// Min Length: 2
		Target *string `json:"target"`

		// text
		// Required: true
		// Min Length: 1
		Text *string `json:"text"`
	}

	dec := json.NewDecoder(bytes.NewReader(data))
	dec.DisallowUnknownFields()
	if err := dec.Decode(&props); err != nil {
		return err
	}

	o.Source = props.Source
	o.Target = props.Target
	o.Text = props.Text
	return nil
}

// Validate validates this auto translation body
func (o *AutoTranslationBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateSource(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTarget(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateText(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *AutoTranslationBody) validateSource(formats strfmt.Registry) error {

	if err := validate.Required("args"+"."+"source", "body", o.Source); err != nil {
		return err
	}

	if err := validate.MinLength("args"+"."+"source", "body", *o.Source, 2); err != nil {
		return err
	}

	return nil
}

func (o *AutoTranslationBody) validateTarget(formats strfmt.Registry) error {

	if err := validate.Required("args"+"."+"target", "body", o.Target); err != nil {
		return err
	}

	if err := validate.MinLength("args"+"."+"target", "body", *o.Target, 2); err != nil {
		return err
	}

	return nil
}

func (o *AutoTranslationBody) validateText(formats strfmt.Registry) error {

	if err := validate.Required("args"+"."+"text", "body", o.Text); err != nil {
		return err
	}

	if err := validate.MinLength("args"+"."+"text", "body", *o.Text, 1); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this auto translation body based on context it is used
func (o *AutoTranslationBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AutoTranslationBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AutoTranslationBody) UnmarshalBinary(b []byte) error {
	var res AutoTranslationBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// AutoTranslationOKBody auto translation o k body
//
// swagger:model AutoTranslationOKBody
type AutoTranslationOKBody struct {

	// text
	// Required: true
	Text *string `json:"text"`
}

// UnmarshalJSON unmarshals this object while disallowing additional properties from JSON
func (o *AutoTranslationOKBody) UnmarshalJSON(data []byte) error {
	var props struct {

		// text
		// Required: true
		Text *string `json:"text"`
	}

	dec := json.NewDecoder(bytes.NewReader(data))
	dec.DisallowUnknownFields()
	if err := dec.Decode(&props); err != nil {
		return err
	}

	o.Text = props.Text
	return nil
}

// Validate validates this auto translation o k body
func (o *AutoTranslationOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateText(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *AutoTranslationOKBody) validateText(formats strfmt.Registry) error {

	if err := validate.Required("autoTranslationOK"+"."+"text", "body", o.Text); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this auto translation o k body based on context it is used
func (o *AutoTranslationOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AutoTranslationOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AutoTranslationOKBody) UnmarshalBinary(b []byte) error {
	var res AutoTranslationOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
