// Code generated by go-swagger; DO NOT EDIT.

package op

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"github.com/MarcSky/freon/api/openapi/frontend/model"
)

// ListIdentifiersOKCode is the HTTP code returned for type ListIdentifiersOK
const ListIdentifiersOKCode int = 200

/*ListIdentifiersOK List with all identifiers

swagger:response listIdentifiersOK
*/
type ListIdentifiersOK struct {

	/*
	  In: Body
	*/
	Payload []*model.Identifier `json:"body,omitempty"`
}

// NewListIdentifiersOK creates ListIdentifiersOK with default headers values
func NewListIdentifiersOK() *ListIdentifiersOK {

	return &ListIdentifiersOK{}
}

// WithPayload adds the payload to the list identifiers o k response
func (o *ListIdentifiersOK) WithPayload(payload []*model.Identifier) *ListIdentifiersOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list identifiers o k response
func (o *ListIdentifiersOK) SetPayload(payload []*model.Identifier) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListIdentifiersOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*model.Identifier, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

func (o *ListIdentifiersOK) ListIdentifiersResponder() {}

/*ListIdentifiersDefault General errors using same model as used by go-swagger for validation errors.

swagger:response listIdentifiersDefault
*/
type ListIdentifiersDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *model.Error `json:"body,omitempty"`
}

// NewListIdentifiersDefault creates ListIdentifiersDefault with default headers values
func NewListIdentifiersDefault(code int) *ListIdentifiersDefault {
	if code <= 0 {
		code = 500
	}

	return &ListIdentifiersDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the list identifiers default response
func (o *ListIdentifiersDefault) WithStatusCode(code int) *ListIdentifiersDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the list identifiers default response
func (o *ListIdentifiersDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the list identifiers default response
func (o *ListIdentifiersDefault) WithPayload(payload *model.Error) *ListIdentifiersDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list identifiers default response
func (o *ListIdentifiersDefault) SetPayload(payload *model.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListIdentifiersDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *ListIdentifiersDefault) ListIdentifiersResponder() {}

type ListIdentifiersNotImplementedResponder struct {
	middleware.Responder
}

func (*ListIdentifiersNotImplementedResponder) ListIdentifiersResponder() {}

func ListIdentifiersNotImplemented() ListIdentifiersResponder {
	return &ListIdentifiersNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.ListIdentifiers has not yet been implemented",
		),
	}
}

type ListIdentifiersResponder interface {
	middleware.Responder
	ListIdentifiersResponder()
}
