// Code generated by go-swagger; DO NOT EDIT.

package op

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"github.com/freonservice/freon/api/openapi/frontend/model"
)

// ListTranslationFilesOKCode is the HTTP code returned for type ListTranslationFilesOK
const ListTranslationFilesOKCode int = 200

/*ListTranslationFilesOK List with all translation files

swagger:response listTranslationFilesOK
*/
type ListTranslationFilesOK struct {

	/*
	  In: Body
	*/
	Payload []*model.TranslationFile `json:"body,omitempty"`
}

// NewListTranslationFilesOK creates ListTranslationFilesOK with default headers values
func NewListTranslationFilesOK() *ListTranslationFilesOK {

	return &ListTranslationFilesOK{}
}

// WithPayload adds the payload to the list translation files o k response
func (o *ListTranslationFilesOK) WithPayload(payload []*model.TranslationFile) *ListTranslationFilesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list translation files o k response
func (o *ListTranslationFilesOK) SetPayload(payload []*model.TranslationFile) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListTranslationFilesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*model.TranslationFile, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

func (o *ListTranslationFilesOK) ListTranslationFilesResponder() {}

/*ListTranslationFilesDefault General errors using same model as used by go-swagger for validation errors.

swagger:response listTranslationFilesDefault
*/
type ListTranslationFilesDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *model.Error `json:"body,omitempty"`
}

// NewListTranslationFilesDefault creates ListTranslationFilesDefault with default headers values
func NewListTranslationFilesDefault(code int) *ListTranslationFilesDefault {
	if code <= 0 {
		code = 500
	}

	return &ListTranslationFilesDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the list translation files default response
func (o *ListTranslationFilesDefault) WithStatusCode(code int) *ListTranslationFilesDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the list translation files default response
func (o *ListTranslationFilesDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the list translation files default response
func (o *ListTranslationFilesDefault) WithPayload(payload *model.Error) *ListTranslationFilesDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list translation files default response
func (o *ListTranslationFilesDefault) SetPayload(payload *model.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListTranslationFilesDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *ListTranslationFilesDefault) ListTranslationFilesResponder() {}

type ListTranslationFilesNotImplementedResponder struct {
	middleware.Responder
}

func (*ListTranslationFilesNotImplementedResponder) ListTranslationFilesResponder() {}

func ListTranslationFilesNotImplemented() ListTranslationFilesResponder {
	return &ListTranslationFilesNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.ListTranslationFiles has not yet been implemented",
		),
	}
}

type ListTranslationFilesResponder interface {
	middleware.Responder
	ListTranslationFilesResponder()
}
