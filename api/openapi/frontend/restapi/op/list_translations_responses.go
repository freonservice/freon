// Code generated by go-swagger; DO NOT EDIT.

package op

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"github.com/MarcSky/freon/api/openapi/frontend/model"
)

// ListTranslationsOKCode is the HTTP code returned for type ListTranslationsOK
const ListTranslationsOKCode int = 200

/*ListTranslationsOK List with all translations

swagger:response listTranslationsOK
*/
type ListTranslationsOK struct {

	/*
	  In: Body
	*/
	Payload []*model.Translation `json:"body,omitempty"`
}

// NewListTranslationsOK creates ListTranslationsOK with default headers values
func NewListTranslationsOK() *ListTranslationsOK {

	return &ListTranslationsOK{}
}

// WithPayload adds the payload to the list translations o k response
func (o *ListTranslationsOK) WithPayload(payload []*model.Translation) *ListTranslationsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list translations o k response
func (o *ListTranslationsOK) SetPayload(payload []*model.Translation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListTranslationsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*model.Translation, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

func (o *ListTranslationsOK) ListTranslationsResponder() {}

/*ListTranslationsDefault General errors using same model as used by go-swagger for validation errors.

swagger:response listTranslationsDefault
*/
type ListTranslationsDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *model.Error `json:"body,omitempty"`
}

// NewListTranslationsDefault creates ListTranslationsDefault with default headers values
func NewListTranslationsDefault(code int) *ListTranslationsDefault {
	if code <= 0 {
		code = 500
	}

	return &ListTranslationsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the list translations default response
func (o *ListTranslationsDefault) WithStatusCode(code int) *ListTranslationsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the list translations default response
func (o *ListTranslationsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the list translations default response
func (o *ListTranslationsDefault) WithPayload(payload *model.Error) *ListTranslationsDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list translations default response
func (o *ListTranslationsDefault) SetPayload(payload *model.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListTranslationsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *ListTranslationsDefault) ListTranslationsResponder() {}

type ListTranslationsNotImplementedResponder struct {
	middleware.Responder
}

func (*ListTranslationsNotImplementedResponder) ListTranslationsResponder() {}

func ListTranslationsNotImplemented() ListTranslationsResponder {
	return &ListTranslationsNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.ListTranslations has not yet been implemented",
		),
	}
}

type ListTranslationsResponder interface {
	middleware.Responder
	ListTranslationsResponder()
}
