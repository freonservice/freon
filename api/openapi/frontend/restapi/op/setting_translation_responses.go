// Code generated by go-swagger; DO NOT EDIT.

package op

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"github.com/freonservice/freon/api/openapi/frontend/model"
)

// SettingTranslationNoContentCode is the HTTP code returned for type SettingTranslationNoContent
const SettingTranslationNoContentCode int = 204

/*SettingTranslationNoContent No content in answer

swagger:response settingTranslationNoContent
*/
type SettingTranslationNoContent struct {
}

// NewSettingTranslationNoContent creates SettingTranslationNoContent with default headers values
func NewSettingTranslationNoContent() *SettingTranslationNoContent {

	return &SettingTranslationNoContent{}
}

// WriteResponse to the client
func (o *SettingTranslationNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

func (o *SettingTranslationNoContent) SettingTranslationResponder() {}

/*SettingTranslationDefault General errors using same model as used by go-swagger for validation errors.

swagger:response settingTranslationDefault
*/
type SettingTranslationDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *model.Error `json:"body,omitempty"`
}

// NewSettingTranslationDefault creates SettingTranslationDefault with default headers values
func NewSettingTranslationDefault(code int) *SettingTranslationDefault {
	if code <= 0 {
		code = 500
	}

	return &SettingTranslationDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the setting translation default response
func (o *SettingTranslationDefault) WithStatusCode(code int) *SettingTranslationDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the setting translation default response
func (o *SettingTranslationDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the setting translation default response
func (o *SettingTranslationDefault) WithPayload(payload *model.Error) *SettingTranslationDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the setting translation default response
func (o *SettingTranslationDefault) SetPayload(payload *model.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SettingTranslationDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *SettingTranslationDefault) SettingTranslationResponder() {}

type SettingTranslationNotImplementedResponder struct {
	middleware.Responder
}

func (*SettingTranslationNotImplementedResponder) SettingTranslationResponder() {}

func SettingTranslationNotImplemented() SettingTranslationResponder {
	return &SettingTranslationNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.SettingTranslation has not yet been implemented",
		),
	}
}

type SettingTranslationResponder interface {
	middleware.Responder
	SettingTranslationResponder()
}
