// Code generated by go-swagger; DO NOT EDIT.

package op

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"github.com/freonservice/freon/api/openapi/frontend/model"
)

// StatisticOKCode is the HTTP code returned for type StatisticOK
const StatisticOKCode int = 200

/*StatisticOK get service statistic

swagger:response statisticOK
*/
type StatisticOK struct {

	/*
	  In: Body
	*/
	Payload *StatisticOKBody `json:"body,omitempty"`
}

// NewStatisticOK creates StatisticOK with default headers values
func NewStatisticOK() *StatisticOK {

	return &StatisticOK{}
}

// WithPayload adds the payload to the statistic o k response
func (o *StatisticOK) WithPayload(payload *StatisticOKBody) *StatisticOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the statistic o k response
func (o *StatisticOK) SetPayload(payload *StatisticOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *StatisticOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *StatisticOK) StatisticResponder() {}

/*StatisticDefault General errors using same model as used by go-swagger for validation errors.

swagger:response statisticDefault
*/
type StatisticDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *model.Error `json:"body,omitempty"`
}

// NewStatisticDefault creates StatisticDefault with default headers values
func NewStatisticDefault(code int) *StatisticDefault {
	if code <= 0 {
		code = 500
	}

	return &StatisticDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the statistic default response
func (o *StatisticDefault) WithStatusCode(code int) *StatisticDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the statistic default response
func (o *StatisticDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the statistic default response
func (o *StatisticDefault) WithPayload(payload *model.Error) *StatisticDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the statistic default response
func (o *StatisticDefault) SetPayload(payload *model.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *StatisticDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *StatisticDefault) StatisticResponder() {}

type StatisticNotImplementedResponder struct {
	middleware.Responder
}

func (*StatisticNotImplementedResponder) StatisticResponder() {}

func StatisticNotImplemented() StatisticResponder {
	return &StatisticNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.Statistic has not yet been implemented",
		),
	}
}

type StatisticResponder interface {
	middleware.Responder
	StatisticResponder()
}
