// Code generated by go-swagger; DO NOT EDIT.

package op

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"github.com/freonservice/freon/api/openapi/frontend/model"
)

// TranslationFilesOKCode is the HTTP code returned for type TranslationFilesOK
const TranslationFilesOKCode int = 200

/*TranslationFilesOK List with all translation files

swagger:response translationFilesOK
*/
type TranslationFilesOK struct {

	/*
	  In: Body
	*/
	Payload []*model.TranslationFile `json:"body,omitempty"`
}

// NewTranslationFilesOK creates TranslationFilesOK with default headers values
func NewTranslationFilesOK() *TranslationFilesOK {

	return &TranslationFilesOK{}
}

// WithPayload adds the payload to the translation files o k response
func (o *TranslationFilesOK) WithPayload(payload []*model.TranslationFile) *TranslationFilesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the translation files o k response
func (o *TranslationFilesOK) SetPayload(payload []*model.TranslationFile) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TranslationFilesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*model.TranslationFile, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

func (o *TranslationFilesOK) TranslationFilesResponder() {}

/*TranslationFilesDefault General errors using same model as used by go-swagger for validation errors.

swagger:response translationFilesDefault
*/
type TranslationFilesDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *model.Error `json:"body,omitempty"`
}

// NewTranslationFilesDefault creates TranslationFilesDefault with default headers values
func NewTranslationFilesDefault(code int) *TranslationFilesDefault {
	if code <= 0 {
		code = 500
	}

	return &TranslationFilesDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the translation files default response
func (o *TranslationFilesDefault) WithStatusCode(code int) *TranslationFilesDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the translation files default response
func (o *TranslationFilesDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the translation files default response
func (o *TranslationFilesDefault) WithPayload(payload *model.Error) *TranslationFilesDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the translation files default response
func (o *TranslationFilesDefault) SetPayload(payload *model.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TranslationFilesDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *TranslationFilesDefault) TranslationFilesResponder() {}

type TranslationFilesNotImplementedResponder struct {
	middleware.Responder
}

func (*TranslationFilesNotImplementedResponder) TranslationFilesResponder() {}

func TranslationFilesNotImplemented() TranslationFilesResponder {
	return &TranslationFilesNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.TranslationFiles has not yet been implemented",
		),
	}
}

type TranslationFilesResponder interface {
	middleware.Responder
	TranslationFilesResponder()
}
