// Code generated by go-swagger; DO NOT EDIT.

package op

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"github.com/freonservice/freon/api/openapi/frontend/model"
)

// TranslationVersionsOKCode is the HTTP code returned for type TranslationVersionsOK
const TranslationVersionsOKCode int = 200

/*TranslationVersionsOK List with all locale versions

swagger:response translationVersionsOK
*/
type TranslationVersionsOK struct {

	/*
	  In: Body
	*/
	Payload []*model.Version `json:"body,omitempty"`
}

// NewTranslationVersionsOK creates TranslationVersionsOK with default headers values
func NewTranslationVersionsOK() *TranslationVersionsOK {

	return &TranslationVersionsOK{}
}

// WithPayload adds the payload to the translation versions o k response
func (o *TranslationVersionsOK) WithPayload(payload []*model.Version) *TranslationVersionsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the translation versions o k response
func (o *TranslationVersionsOK) SetPayload(payload []*model.Version) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TranslationVersionsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*model.Version, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

func (o *TranslationVersionsOK) TranslationVersionsResponder() {}

/*TranslationVersionsDefault General errors using same model as used by go-swagger for validation errors.

swagger:response translationVersionsDefault
*/
type TranslationVersionsDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *model.Error `json:"body,omitempty"`
}

// NewTranslationVersionsDefault creates TranslationVersionsDefault with default headers values
func NewTranslationVersionsDefault(code int) *TranslationVersionsDefault {
	if code <= 0 {
		code = 500
	}

	return &TranslationVersionsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the translation versions default response
func (o *TranslationVersionsDefault) WithStatusCode(code int) *TranslationVersionsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the translation versions default response
func (o *TranslationVersionsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the translation versions default response
func (o *TranslationVersionsDefault) WithPayload(payload *model.Error) *TranslationVersionsDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the translation versions default response
func (o *TranslationVersionsDefault) SetPayload(payload *model.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TranslationVersionsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *TranslationVersionsDefault) TranslationVersionsResponder() {}

type TranslationVersionsNotImplementedResponder struct {
	middleware.Responder
}

func (*TranslationVersionsNotImplementedResponder) TranslationVersionsResponder() {}

func TranslationVersionsNotImplemented() TranslationVersionsResponder {
	return &TranslationVersionsNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.TranslationVersions has not yet been implemented",
		),
	}
}

type TranslationVersionsResponder interface {
	middleware.Responder
	TranslationVersionsResponder()
}
