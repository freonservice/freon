// Code generated by go-swagger; DO NOT EDIT.

package op

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"github.com/MarcSky/freon/api/openapi/frontend/model"
)

// UserChangeStatusNoContentCode is the HTTP code returned for type UserChangeStatusNoContent
const UserChangeStatusNoContentCode int = 204

/*UserChangeStatusNoContent No content in answer

swagger:response userChangeStatusNoContent
*/
type UserChangeStatusNoContent struct {
}

// NewUserChangeStatusNoContent creates UserChangeStatusNoContent with default headers values
func NewUserChangeStatusNoContent() *UserChangeStatusNoContent {

	return &UserChangeStatusNoContent{}
}

// WriteResponse to the client
func (o *UserChangeStatusNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

func (o *UserChangeStatusNoContent) UserChangeStatusResponder() {}

/*UserChangeStatusDefault General errors using same model as used by go-swagger for validation errors.

swagger:response userChangeStatusDefault
*/
type UserChangeStatusDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *model.Error `json:"body,omitempty"`
}

// NewUserChangeStatusDefault creates UserChangeStatusDefault with default headers values
func NewUserChangeStatusDefault(code int) *UserChangeStatusDefault {
	if code <= 0 {
		code = 500
	}

	return &UserChangeStatusDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the user change status default response
func (o *UserChangeStatusDefault) WithStatusCode(code int) *UserChangeStatusDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the user change status default response
func (o *UserChangeStatusDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the user change status default response
func (o *UserChangeStatusDefault) WithPayload(payload *model.Error) *UserChangeStatusDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the user change status default response
func (o *UserChangeStatusDefault) SetPayload(payload *model.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UserChangeStatusDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *UserChangeStatusDefault) UserChangeStatusResponder() {}

type UserChangeStatusNotImplementedResponder struct {
	middleware.Responder
}

func (*UserChangeStatusNotImplementedResponder) UserChangeStatusResponder() {}

func UserChangeStatusNotImplemented() UserChangeStatusResponder {
	return &UserChangeStatusNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.UserChangeStatus has not yet been implemented",
		),
	}
}

type UserChangeStatusResponder interface {
	middleware.Responder
	UserChangeStatusResponder()
}
